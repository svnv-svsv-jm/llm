name: Test and update master

on:
  push:
    branches: ["develop"]

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        runs-on: ["macos-latest", "ubuntu-latest"]
        cmd: ["mypy", "pytest", "nbmake"]

    runs-on: ${{ matrix.runs-on }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and test
        run: |
          pip install --upgrade pip
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          make install
          make ${{ matrix.cmd }}

      - name: Push to main if tests pass
        if: success()
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          force: true
          tags: true

      - name: Get project name from pyproject.toml
        id: get_name
        run: |
          CMD='import toml; print(toml.load("pyproject.toml")["tool"]["poetry"]["name"])'
          echo "NAME=$(python -c ${CMD})" >> $GITHUB_ENV

      - name: Get project version
        id: get_version
        run: |
          CMD="import pkg_resources; print(pkg_resources.get_distribution('${{ env.NAME }}').version)""
          echo "VERSION=$(python -c ${CMD})" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
